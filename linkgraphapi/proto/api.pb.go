// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Link describes a link in the linkgraph.
type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Url         string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	RetrievedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=retrieved_at,json=retrievedAt,proto3" json:"retrieved_at,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *Link) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *Link) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Link) GetRetrievedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RetrievedAt
	}
	return nil
}

// Edge describes an edge in the linkgraph.
type Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SrcUuid   []byte                 `protobuf:"bytes,2,opt,name=src_uuid,json=srcUuid,proto3" json:"src_uuid,omitempty"`
	DstUuid   []byte                 `protobuf:"bytes,3,opt,name=dst_uuid,json=dstUuid,proto3" json:"dst_uuid,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Edge) Reset() {
	*x = Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edge) ProtoMessage() {}

func (x *Edge) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edge.ProtoReflect.Descriptor instead.
func (*Edge) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *Edge) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *Edge) GetSrcUuid() []byte {
	if x != nil {
		return x.SrcUuid
	}
	return nil
}

func (x *Edge) GetDstUuid() []byte {
	if x != nil {
		return x.DstUuid
	}
	return nil
}

func (x *Edge) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// RemoveStaleEdgesQuery describes a query for removing stale edges from the
// graph.
type RemoveStaleEdgesQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUuid      []byte                 `protobuf:"bytes,1,opt,name=from_uuid,json=fromUuid,proto3" json:"from_uuid,omitempty"`
	UpdatedBefore *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_before,json=updatedBefore,proto3" json:"updated_before,omitempty"`
}

func (x *RemoveStaleEdgesQuery) Reset() {
	*x = RemoveStaleEdgesQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStaleEdgesQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStaleEdgesQuery) ProtoMessage() {}

func (x *RemoveStaleEdgesQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStaleEdgesQuery.ProtoReflect.Descriptor instead.
func (*RemoveStaleEdgesQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveStaleEdgesQuery) GetFromUuid() []byte {
	if x != nil {
		return x.FromUuid
	}
	return nil
}

func (x *RemoveStaleEdgesQuery) GetUpdatedBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedBefore
	}
	return nil
}

// Range specifies the [fromID, toID) range to use when streaming Links or Edges.
type Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUuid []byte `protobuf:"bytes,1,opt,name=from_uuid,json=fromUuid,proto3" json:"from_uuid,omitempty"`
	ToUuid   []byte `protobuf:"bytes,2,opt,name=to_uuid,json=toUuid,proto3" json:"to_uuid,omitempty"`
	// Return results before this filter timestamp.
	Filter *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *Range) Reset() {
	*x = Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *Range) GetFromUuid() []byte {
	if x != nil {
		return x.FromUuid
	}
	return nil
}

func (x *Range) GetToUuid() []byte {
	if x != nil {
		return x.ToUuid
	}
	return nil
}

func (x *Range) GetFilter() *timestamppb.Timestamp {
	if x != nil {
		return x.Filter
	}
	return nil
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x6b, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x3d,
	0x0a, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8b, 0x01,
	0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72,
	0x63, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x72,
	0x63, 0x55, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x73, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x77, 0x0a, 0x15, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x45, 0x64, 0x67, 0x65, 0x73, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x41, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x22, 0x71, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x6f, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x32, 0xf1, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x6e, 0x6b,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x26, 0x0a, 0x0a, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x26, 0x0a,
	0x0a, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x45, 0x64, 0x67, 0x65, 0x12, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x64, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x6c, 0x65, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x24, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x30, 0x01, 0x12, 0x24, 0x0a, 0x05, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_proto_goTypes = []interface{}{
	(*Link)(nil),                  // 0: proto.Link
	(*Edge)(nil),                  // 1: proto.Edge
	(*RemoveStaleEdgesQuery)(nil), // 2: proto.RemoveStaleEdgesQuery
	(*Range)(nil),                 // 3: proto.Range
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 5: google.protobuf.Empty
}
var file_api_proto_depIdxs = []int32{
	4, // 0: proto.Link.retrieved_at:type_name -> google.protobuf.Timestamp
	4, // 1: proto.Edge.updated_at:type_name -> google.protobuf.Timestamp
	4, // 2: proto.RemoveStaleEdgesQuery.updated_before:type_name -> google.protobuf.Timestamp
	4, // 3: proto.Range.filter:type_name -> google.protobuf.Timestamp
	0, // 4: proto.LinkGraph.UpsertLink:input_type -> proto.Link
	1, // 5: proto.LinkGraph.UpsertEdge:input_type -> proto.Edge
	2, // 6: proto.LinkGraph.RemoveStaleEdges:input_type -> proto.RemoveStaleEdgesQuery
	3, // 7: proto.LinkGraph.Links:input_type -> proto.Range
	3, // 8: proto.LinkGraph.Edges:input_type -> proto.Range
	0, // 9: proto.LinkGraph.UpsertLink:output_type -> proto.Link
	1, // 10: proto.LinkGraph.UpsertEdge:output_type -> proto.Edge
	5, // 11: proto.LinkGraph.RemoveStaleEdges:output_type -> google.protobuf.Empty
	0, // 12: proto.LinkGraph.Links:output_type -> proto.Link
	1, // 13: proto.LinkGraph.Edges:output_type -> proto.Edge
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStaleEdgesQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LinkGraphClient is the client API for LinkGraph service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LinkGraphClient interface {
	UpsertLink(ctx context.Context, in *Link, opts ...grpc.CallOption) (*Link, error)
	UpsertEdge(ctx context.Context, in *Edge, opts ...grpc.CallOption) (*Edge, error)
	RemoveStaleEdges(ctx context.Context, in *RemoveStaleEdgesQuery, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Links(ctx context.Context, in *Range, opts ...grpc.CallOption) (LinkGraph_LinksClient, error)
	Edges(ctx context.Context, in *Range, opts ...grpc.CallOption) (LinkGraph_EdgesClient, error)
}

type linkGraphClient struct {
	cc grpc.ClientConnInterface
}

func NewLinkGraphClient(cc grpc.ClientConnInterface) LinkGraphClient {
	return &linkGraphClient{cc}
}

func (c *linkGraphClient) UpsertLink(ctx context.Context, in *Link, opts ...grpc.CallOption) (*Link, error) {
	out := new(Link)
	err := c.cc.Invoke(ctx, "/proto.LinkGraph/UpsertLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkGraphClient) UpsertEdge(ctx context.Context, in *Edge, opts ...grpc.CallOption) (*Edge, error) {
	out := new(Edge)
	err := c.cc.Invoke(ctx, "/proto.LinkGraph/UpsertEdge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkGraphClient) RemoveStaleEdges(ctx context.Context, in *RemoveStaleEdgesQuery, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.LinkGraph/RemoveStaleEdges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkGraphClient) Links(ctx context.Context, in *Range, opts ...grpc.CallOption) (LinkGraph_LinksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LinkGraph_serviceDesc.Streams[0], "/proto.LinkGraph/Links", opts...)
	if err != nil {
		return nil, err
	}
	x := &linkGraphLinksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LinkGraph_LinksClient interface {
	Recv() (*Link, error)
	grpc.ClientStream
}

type linkGraphLinksClient struct {
	grpc.ClientStream
}

func (x *linkGraphLinksClient) Recv() (*Link, error) {
	m := new(Link)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *linkGraphClient) Edges(ctx context.Context, in *Range, opts ...grpc.CallOption) (LinkGraph_EdgesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LinkGraph_serviceDesc.Streams[1], "/proto.LinkGraph/Edges", opts...)
	if err != nil {
		return nil, err
	}
	x := &linkGraphEdgesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LinkGraph_EdgesClient interface {
	Recv() (*Edge, error)
	grpc.ClientStream
}

type linkGraphEdgesClient struct {
	grpc.ClientStream
}

func (x *linkGraphEdgesClient) Recv() (*Edge, error) {
	m := new(Edge)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LinkGraphServer is the server API for LinkGraph service.
type LinkGraphServer interface {
	UpsertLink(context.Context, *Link) (*Link, error)
	UpsertEdge(context.Context, *Edge) (*Edge, error)
	RemoveStaleEdges(context.Context, *RemoveStaleEdgesQuery) (*emptypb.Empty, error)
	Links(*Range, LinkGraph_LinksServer) error
	Edges(*Range, LinkGraph_EdgesServer) error
}

// UnimplementedLinkGraphServer can be embedded to have forward compatible implementations.
type UnimplementedLinkGraphServer struct {
}

func (*UnimplementedLinkGraphServer) UpsertLink(context.Context, *Link) (*Link, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertLink not implemented")
}
func (*UnimplementedLinkGraphServer) UpsertEdge(context.Context, *Edge) (*Edge, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertEdge not implemented")
}
func (*UnimplementedLinkGraphServer) RemoveStaleEdges(context.Context, *RemoveStaleEdgesQuery) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveStaleEdges not implemented")
}
func (*UnimplementedLinkGraphServer) Links(*Range, LinkGraph_LinksServer) error {
	return status.Errorf(codes.Unimplemented, "method Links not implemented")
}
func (*UnimplementedLinkGraphServer) Edges(*Range, LinkGraph_EdgesServer) error {
	return status.Errorf(codes.Unimplemented, "method Edges not implemented")
}

func RegisterLinkGraphServer(s *grpc.Server, srv LinkGraphServer) {
	s.RegisterService(&_LinkGraph_serviceDesc, srv)
}

func _LinkGraph_UpsertLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Link)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkGraphServer).UpsertLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LinkGraph/UpsertLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkGraphServer).UpsertLink(ctx, req.(*Link))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkGraph_UpsertEdge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Edge)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkGraphServer).UpsertEdge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LinkGraph/UpsertEdge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkGraphServer).UpsertEdge(ctx, req.(*Edge))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkGraph_RemoveStaleEdges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveStaleEdgesQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkGraphServer).RemoveStaleEdges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LinkGraph/RemoveStaleEdges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkGraphServer).RemoveStaleEdges(ctx, req.(*RemoveStaleEdgesQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkGraph_Links_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Range)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LinkGraphServer).Links(m, &linkGraphLinksServer{stream})
}

type LinkGraph_LinksServer interface {
	Send(*Link) error
	grpc.ServerStream
}

type linkGraphLinksServer struct {
	grpc.ServerStream
}

func (x *linkGraphLinksServer) Send(m *Link) error {
	return x.ServerStream.SendMsg(m)
}

func _LinkGraph_Edges_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Range)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LinkGraphServer).Edges(m, &linkGraphEdgesServer{stream})
}

type LinkGraph_EdgesServer interface {
	Send(*Edge) error
	grpc.ServerStream
}

type linkGraphEdgesServer struct {
	grpc.ServerStream
}

func (x *linkGraphEdgesServer) Send(m *Edge) error {
	return x.ServerStream.SendMsg(m)
}

var _LinkGraph_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.LinkGraph",
	HandlerType: (*LinkGraphServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpsertLink",
			Handler:    _LinkGraph_UpsertLink_Handler,
		},
		{
			MethodName: "UpsertEdge",
			Handler:    _LinkGraph_UpsertEdge_Handler,
		},
		{
			MethodName: "RemoveStaleEdges",
			Handler:    _LinkGraph_RemoveStaleEdges_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Links",
			Handler:       _LinkGraph_Links_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Edges",
			Handler:       _LinkGraph_Edges_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
